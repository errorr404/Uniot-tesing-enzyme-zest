// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gift renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Gift />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Form
        bsClass="form"
        componentClass="form"
        horizontal={false}
        inline={false}
      >
        <FormGroup
          bsClass="form-group"
        >
          <ControlLabel
            bsClass="control-label"
            srOnly={false}
          >
            Person
          </ControlLabel>
          &gt;FormControl className="input-person" onChange =
          [Function]
          /&gt;
        </FormGroup>
      </Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "form",
        "children": <FormGroup
          bsClass="form-group"
        >
          <ControlLabel
            bsClass="control-label"
            srOnly={false}
          >
            Person
          </ControlLabel>
          &gt;FormControl className="input-person" onChange =
          [Function]
          /&gt;
        </FormGroup>,
        "componentClass": "form",
        "horizontal": false,
        "inline": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form-group",
          "children": Array [
            <ControlLabel
              bsClass="control-label"
              srOnly={false}
            >
              Person
            </ControlLabel>,
            ">FormControl className=\\"input-person\\" onChange =",
            [Function],
            "/>",
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "control-label",
              "children": "Person",
              "srOnly": false,
            },
            "ref": null,
            "rendered": "Person",
            "type": [Function],
          },
          ">FormControl className=\\"input-person\\" onChange =",
          [Function],
          "/>",
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Form
          bsClass="form"
          componentClass="form"
          horizontal={false}
          inline={false}
        >
          <FormGroup
            bsClass="form-group"
          >
            <ControlLabel
              bsClass="control-label"
              srOnly={false}
            >
              Person
            </ControlLabel>
            &gt;FormControl className="input-person" onChange =
            [Function]
            /&gt;
          </FormGroup>
        </Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form",
          "children": <FormGroup
            bsClass="form-group"
          >
            <ControlLabel
              bsClass="control-label"
              srOnly={false}
            >
              Person
            </ControlLabel>
            &gt;FormControl className="input-person" onChange =
            [Function]
            /&gt;
          </FormGroup>,
          "componentClass": "form",
          "horizontal": false,
          "inline": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": Array [
              <ControlLabel
                bsClass="control-label"
                srOnly={false}
              >
                Person
              </ControlLabel>,
              ">FormControl className=\\"input-person\\" onChange =",
              [Function],
              "/>",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "control-label",
                "children": "Person",
                "srOnly": false,
              },
              "ref": null,
              "rendered": "Person",
              "type": [Function],
            },
            ">FormControl className=\\"input-person\\" onChange =",
            [Function],
            "/>",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
